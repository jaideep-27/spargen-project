const jwt = require('jsonwebtoken');
const mongoose = require('mongoose');
const User = require('./src/models/user.model');
require('dotenv').config();

console.log('Starting JWT test script...');

const testJWT = async () => {
  try {
    console.log('Connecting to MongoDB...');
    // Connect to database
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb+srv://amarabadjayadeep:sj986625@cluster0.uuwpnzu.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0');
    console.log('MongoDB Connected');
    
    // Find our admin user
    console.log('Looking for admin user...');
    const user = await User.findOne({ email: 'admin@jewelryshop.com' });
    
    if (!user) {
      console.log('Admin user not found');
      process.exit(1);
    }
    
    console.log('User found:', {
      id: user._id,
      email: user.email,
      role: user.role
    });
    
    // Generate token directly using model method
    console.log('Generating token using model method...');
    const userToken = user.getSignedJwtToken();
    console.log('Token generated by model method:', userToken);
    
    // Generate token directly using JWT library
    console.log('Generating token using JWT library directly...');
    const jwtToken = jwt.sign(
      { id: user._id, role: user.role },
      process.env.JWT_SECRET || 'your_jwt_secret_key',
      {
        expiresIn: process.env.JWT_EXPIRE || '30d',
      }
    );
    console.log('Token generated directly with JWT:', jwtToken);
    
    // Verify both tokens
    console.log('Verifying tokens...');
    try {
      const decodedUser = jwt.verify(userToken, process.env.JWT_SECRET || 'your_jwt_secret_key');
      console.log('User token verified successfully:', decodedUser);
    } catch (err) {
      console.error('Error verifying user token:', err.message);
    }
    
    try {
      const decodedJWT = jwt.verify(jwtToken, process.env.JWT_SECRET || 'your_jwt_secret_key');
      console.log('JWT token verified successfully:', decodedJWT);
    } catch (err) {
      console.error('Error verifying JWT token:', err.message);
    }
    
    // Test environment variables
    console.log('Environment variables:');
    console.log('JWT_SECRET:', process.env.JWT_SECRET ? 'Set (value hidden)' : 'Not set');
    console.log('JWT_EXPIRE:', process.env.JWT_EXPIRE);
    console.log('MONGODB_URI:', process.env.MONGODB_URI ? 'Set (value hidden)' : 'Not set');
    
    console.log('Test completed successfully.');
    process.exit(0);
  } catch (error) {
    console.error('Error in test script:', error);
    process.exit(1);
  }
};

// Run with proper error handling
testJWT().catch(err => {
  console.error('Unhandled error in test script:', err);
  process.exit(1);
}); 